// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package db

import (
	"context"
)

const createUser = `-- name: CreateUser :one
INSERT INTO
  users (id, email, name, hash_password)
VALUES
  (?, ?, ?, ?) RETURNING id, email, name, hash_password
`

type CreateUserParams struct {
	ID           string
	Email        string
	Name         string
	HashPassword string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.Email,
		arg.Name,
		arg.HashPassword,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Name,
		&i.HashPassword,
	)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT
  id, email, name, hash_password
FROM
  users
WHERE
  email = ?
LIMIT
  1
`

func (q *Queries) GetUser(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUser, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.Name,
		&i.HashPassword,
	)
	return i, err
}
